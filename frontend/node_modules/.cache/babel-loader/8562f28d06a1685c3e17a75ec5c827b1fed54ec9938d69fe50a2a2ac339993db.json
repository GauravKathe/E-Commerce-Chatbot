{"ast":null,"code":"var _jsxFileName = \"E:\\\\Backup\\\\chatbot\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContainer = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background-color: #f0f2f5;\n`;\n_c = ChatContainer;\nconst Header = styled.div`\n  background-color: #ffffff;\n  padding: 1rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n`;\n_c2 = Header;\nconst ChatArea = styled.div`\n  flex: 1;\n  padding: 1rem;\n  overflow-y: auto;\n`;\n_c3 = ChatArea;\nconst MessageContainer = styled.div`\n  margin: 1rem 0;\n`;\n_c4 = MessageContainer;\nconst Message = styled.div`\n  max-width: 70%;\n  padding: 0.5rem 1rem;\n  border-radius: 1rem;\n  margin: ${props => props.isUser ? '0 0 0 auto' : '0 auto 0 0'};\n  background-color: ${props => props.isUser ? '#0084ff' : '#e4e6eb'};\n  color: ${props => props.isUser ? 'white' : 'black'};\n`;\n_c5 = Message;\nconst InputArea = styled.div`\n  padding: 1rem;\n  background-color: white;\n  display: flex;\n  gap: 1rem;\n`;\n_c6 = InputArea;\nconst Input = styled.input`\n  flex: 1;\n  padding: 0.5rem;\n  border: 1px solid #ddd;\n  border-radius: 20px;\n  font-size: 1rem;\n`;\n_c7 = Input;\nconst Button = styled.button`\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 20px;\n  background-color: #0084ff;\n  color: white;\n  cursor: pointer;\n`;\n_c8 = Button;\nconst LogoutButton = styled(Button)`\n  background-color: #dc3545;\n`;\n_c9 = LogoutButton;\nfunction Chat({\n  setAuthenticated\n}) {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: \"Hello! How can I help you today?\",\n    isUser: false\n  }]);\n  const [input, setInput] = useState('');\n  const handleSend = () => {\n    if (input.trim()) {\n      // Add user message\n      setMessages([...messages, {\n        text: input,\n        isUser: true\n      }]);\n\n      // Simulate bot response\n      setTimeout(() => {\n        setMessages(prev => [...prev, {\n          text: \"I'm here to help! How can I assist you with shopping today?\",\n          isUser: false\n        }]);\n      }, 1000);\n      setInput('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ChatContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Shopping Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {\n        onClick: () => setAuthenticated(false),\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatArea, {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(MessageContainer, {\n        children: /*#__PURE__*/_jsxDEV(Message, {\n          isUser: message.isUser,\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputArea, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && handleSend(),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"53pyHp2iVtftwsc6gweP4DJw0Xg=\");\n_c10 = Chat;\nexport default Chat;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"ChatArea\");\n$RefreshReg$(_c4, \"MessageContainer\");\n$RefreshReg$(_c5, \"Message\");\n$RefreshReg$(_c6, \"InputArea\");\n$RefreshReg$(_c7, \"Input\");\n$RefreshReg$(_c8, \"Button\");\n$RefreshReg$(_c9, \"LogoutButton\");\n$RefreshReg$(_c10, \"Chat\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","ChatContainer","div","_c","Header","_c2","ChatArea","_c3","MessageContainer","_c4","Message","props","isUser","_c5","InputArea","_c6","Input","input","_c7","Button","button","_c8","LogoutButton","_c9","Chat","setAuthenticated","_s","messages","setMessages","text","setInput","handleSend","trim","setTimeout","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","message","index","value","onChange","e","target","onKeyPress","key","placeholder","_c10","$RefreshReg$"],"sources":["E:/Backup/chatbot/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ChatContainer = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #f0f2f5;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  background-color: #ffffff;\r\n  padding: 1rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n`;\r\n\r\nconst ChatArea = styled.div`\r\n  flex: 1;\r\n  padding: 1rem;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst MessageContainer = styled.div`\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst Message = styled.div`\r\n  max-width: 70%;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 1rem;\r\n  margin: ${props => props.isUser ? '0 0 0 auto' : '0 auto 0 0'};\r\n  background-color: ${props => props.isUser ? '#0084ff' : '#e4e6eb'};\r\n  color: ${props => props.isUser ? 'white' : 'black'};\r\n`;\r\n\r\nconst InputArea = styled.div`\r\n  padding: 1rem;\r\n  background-color: white;\r\n  display: flex;\r\n  gap: 1rem;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  flex: 1;\r\n  padding: 0.5rem;\r\n  border: 1px solid #ddd;\r\n  border-radius: 20px;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 0.5rem 1rem;\r\n  border: none;\r\n  border-radius: 20px;\r\n  background-color: #0084ff;\r\n  color: white;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst LogoutButton = styled(Button)`\r\n  background-color: #dc3545;\r\n`;\r\n\r\nfunction Chat({ setAuthenticated }) {\r\n  const [messages, setMessages] = useState([\r\n    { text: \"Hello! How can I help you today?\", isUser: false }\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n\r\n  const handleSend = () => {\r\n    if (input.trim()) {\r\n      // Add user message\r\n      setMessages([...messages, { text: input, isUser: true }]);\r\n      \r\n      // Simulate bot response\r\n      setTimeout(() => {\r\n        setMessages(prev => [...prev, { \r\n          text: \"I'm here to help! How can I assist you with shopping today?\", \r\n          isUser: false \r\n        }]);\r\n      }, 1000);\r\n      \r\n      setInput('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ChatContainer>\r\n      <Header>\r\n        <h2>Shopping Assistant</h2>\r\n        <LogoutButton onClick={() => setAuthenticated(false)}>Logout</LogoutButton>\r\n      </Header>\r\n      \r\n      <ChatArea>\r\n        {messages.map((message, index) => (\r\n          <MessageContainer key={index}>\r\n            <Message isUser={message.isUser}>\r\n              {message.text}\r\n            </Message>\r\n          </MessageContainer>\r\n        ))}\r\n      </ChatArea>\r\n      \r\n      <InputArea>\r\n        <Input\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyPress={(e) => e.key === 'Enter' && handleSend()}\r\n          placeholder=\"Type your message...\"\r\n        />\r\n        <Button onClick={handleSend}>Send</Button>\r\n      </InputArea>\r\n    </ChatContainer>\r\n  );\r\n}\r\n\r\nexport default Chat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}